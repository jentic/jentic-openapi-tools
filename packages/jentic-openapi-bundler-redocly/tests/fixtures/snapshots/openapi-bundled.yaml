info:
  title: Users API
  version: 1.0.0
servers:
  - url: https://api.example.com
paths:
  /users:
    get:
      summary: List users
      description: Returns a paginated list of users.
      parameters:
        - $ref: '#/components/parameters/TraceId'
        - name: limit
          in: query
          description: Max results to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 50
      responses:
        '200':
          description: A page of users
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                  - pageInfo
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  pageInfo:
                    allOf:
                      - $ref: '#/components/schemas/Paging'
                      - type: object
                        properties:
                          totalCount:
                            type: integer
                additionalProperties: false
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UserBase'
                - $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: URI of the newly created user
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
  /users/{id}:
    parameters:
      - $ref: '#/components/parameters/Id'
    get:
      summary: Get user by ID
      parameters:
        - $ref: '#/components/parameters/TraceId'
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      summary: Update user (partial)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                address:
                  oneOf:
                    - $ref: '#/components/schemas/Address'
                    - type: 'null'
              additionalProperties: false
      responses:
        '200':
          description: Updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    NewUser:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
          minLength: 1
        email:
          type: string
          format: email
        metadata:
          type: object
          additionalProperties:
            oneOf:
              - type: string
              - type: number
              - $ref: '#/components/schemas/Address'
      additionalProperties: false
    UserBase:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
          minLength: 1
        email:
          type: string
          format: email
      additionalProperties: false
    Id:
      type: string
      pattern: ^[a-zA-Z0-9_-]{6,32}$
    Address:
      type: object
      required:
        - street
        - city
        - country
      properties:
        street:
          type: string
        city:
          type: string
        postalCode:
          type: string
        country:
          type: string
      additionalProperties: false
    User:
      allOf:
        - $ref: '#/components/schemas/UserBase'
        - type: object
          required:
            - id
          properties:
            id:
              $ref: '#/components/schemas/Id'
            address:
              $ref: '#/components/schemas/Address'
            roles:
              type: array
              items:
                type: string
                enum:
                  - admin
                  - editor
                  - viewer
          additionalProperties: false
    Paging:
      type: object
      required:
        - limit
        - offset
        - hasNext
      properties:
        limit:
          type: integer
          minimum: 1
        offset:
          type: integer
          minimum: 0
        hasNext:
          type: boolean
      additionalProperties: false
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: BAD_REQUEST
        message:
          type: string
        details:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
              message:
                type: string
      additionalProperties: false
  parameters:
    TraceId:
      name: X-Trace-Id
      in: header
      description: Correlates logs and traces for a request
      required: false
      schema:
        type: string
        maxLength: 64
    Id:
      name: id
      in: path
      required: true
      description: Resource identifier
      schema:
        $ref: '#/components/schemas/Id'
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'