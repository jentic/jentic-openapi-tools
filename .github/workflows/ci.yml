name: CI

on:
  pull_request:

jobs:
  lint_typecheck:
    name: Lint / Typecheck
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Set up Python
        run: uv python install ${{ matrix.python }}
      # dev group included by default -> ruff/pyright available
      - name: Install deps (with dev)
        run: uv sync
      - name: Ruff + Pyright
        run: |
          uv run ruff check --output-format=github .
          uv run ruff format --check .
          uv run pyright

  test_parser:
    name: Test (jentic-openapi-parser)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Set up Python
        run: uv python install ${{ matrix.python }}
      - name: Install deps (with dev)
        run: uv sync
      - name: Pytest (parser)
        run: uv run --package jentic-openapi-parser pytest -q packages/jentic-openapi-parser/tests

  test_transformer:
    name: Test (jentic-openapi-transformer)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Set up Python
        run: uv python install ${{ matrix.python }}
      - name: Install deps (with dev)
        run: uv sync
      - name: Pytest (transformer)
        run: uv run --package jentic-openapi-transformer pytest -q packages/jentic-openapi-transformer/tests

  test_validator:
    name: Test (jentic-openapi-validator)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Set up Python
        run: uv python install ${{ matrix.python }}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Spectral CLI
        run: npm install -g @stoplight/spectral-cli
      - name: Install deps (with dev)
        run: uv sync
      - name: Pytest (validator)
        run: uv run --package jentic-openapi-validator pytest -q packages/jentic-openapi-validator/tests

  test_validator_spectral:
    name: Test (jentic-openapi-validator-spectral)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Set up Python
        run: uv python install ${{ matrix.python }}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Spectral CLI
        run: npm install -g @stoplight/spectral-cli
      - name: Install deps (with dev)
        run: uv sync
      - name: Pytest (validator-spectral)
        run: uv run --package jentic-openapi-validator-spectral pytest -q packages/jentic-openapi-validator-spectral/tests
